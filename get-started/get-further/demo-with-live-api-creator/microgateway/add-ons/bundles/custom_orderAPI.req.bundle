<?xml version="1.0" encoding="UTF-8"?><l7:Bundle xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management">
            <l7:References>
                <l7:Item>
                    <l7:Name>cluster.hostname</l7:Name>
                    <l7:Id>0000000000000000fffffffffff5519f</l7:Id>
                    <l7:Type>CLUSTER_PROPERTY</l7:Type>
                    <l7:TimeStamp>2017-08-03T16:13:13.002Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:ClusterProperty id="0000000000000000fffffffffff5519f" version="0">
                            <l7:Name>cluster.hostname</l7:Name>
                            <l7:Value/>
                        </l7:ClusterProperty>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>custom_orderAPI</l7:Name>
                    <l7:Id>625292a693dae5ebdbef12a7aa8e52b5</l7:Id>
                    <l7:Type>POLICY</l7:Type>
                    <l7:TimeStamp>2017-08-03T16:13:13.013Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:Policy guid="96cb5ae4-5cd3-4326-96af-b45bb69741f7" id="625292a693dae5ebdbef12a7aa8e52b5" version="0">
                            <l7:PolicyDetail folderId="d1bf78b539c944534cc5d33d1ff4fc64" guid="96cb5ae4-5cd3-4326-96af-b45bb69741f7" id="625292a693dae5ebdbef12a7aa8e52b5" version="0">
<l7:Name>custom_orderAPI</l7:Name>
<l7:PolicyType>Include</l7:PolicyType>
<l7:Properties>
    <l7:Property key="revision">
        <l7:LongValue>1</l7:LongValue>
    </l7:Property>
    <l7:Property key="soap">
        <l7:BooleanValue>false</l7:BooleanValue>
    </l7:Property>
</l7:Properties>
                            </l7:PolicyDetail>
                            <l7:Resources>
<l7:ResourceSet tag="policy">
    <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Policy Fragment: custom_orderAPI"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;L7p:Regex&gt;
            &lt;L7p:AutoTarget booleanValue="false"/&gt;
            &lt;L7p:CaptureVar stringValue="customer"/&gt;
            &lt;L7p:IncludeEntireExpressionCapture booleanValue="false"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="request.http.uri"/&gt;
            &lt;L7p:Regex stringValue="recSvc\/v1\/users\/(.*?)\/orders"/&gt;
            &lt;L7p:Replacement stringValue=""/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
        &lt;/L7p:Regex&gt;
        &lt;wsp:All wsp:Usage="Required"&gt;
            &lt;L7p:SetVariable&gt;
                &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                &lt;L7p:VariableToSet stringValue="cachehit"/&gt;
            &lt;/L7p:SetVariable&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:CacheLookup&gt;
                            &lt;L7p:CacheEntryKey stringValue="${customer}-endpoints_${gateway.cluster.hostname}"/&gt;
                            &lt;L7p:CacheId stringValue="EndPointCache"/&gt;
                            &lt;L7p:ContentTypeOverride stringValue="application/json; charset=utf-8"/&gt;
                            &lt;L7p:MaxEntryAgeSeconds stringValue="10"/&gt;
                            &lt;L7p:OtherTargetMessageVariable stringValue="orders"/&gt;
                            &lt;L7p:Target target="OTHER"/&gt;
                        &lt;/L7p:CacheLookup&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="cachehit"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                &lt;/wsp:All&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:CreateRoutingStrategy&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Set available routes for endpoint to list in array"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Routes routes="included"&gt;
                            &lt;L7p:item route="included"&gt;
                                &lt;L7p:Name stringValue="${orders.results}"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Routes&gt;
                        &lt;L7p:StrategyDescription stringValue="Round-Robin"/&gt;
                        &lt;L7p:StrategyName stringValue="robin"/&gt;
                    &lt;/L7p:CreateRoutingStrategy&gt;
                    &lt;L7p:ForEachLoop L7p:Usage="Required"
                        loopVariable="strategy.routeList" variablePrefix="routeList"&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="MA=="/&gt;
                            &lt;L7p:DataType variableDataType="int"/&gt;
                            &lt;L7p:VariableToSet stringValue="feedback.current.status"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:ExecuteRoutingStrategy&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Pick next route for strategy, ignoring any down routes (feedback = -1)"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                        &lt;/L7p:ExecuteRoutingStrategy&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:ComparisonAssertion&gt;
                                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                    &lt;L7p:Expression1 stringValue="${attemptedroutes}"/&gt;
                                    &lt;L7p:Operator operatorNull="null"/&gt;
                                    &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue="hello"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Predicates&gt;
                                &lt;/L7p:ComparisonAssertion&gt;
                                &lt;L7p:SetVariable&gt;
                                    &lt;L7p:Base64Expression stringValue="JHtyb3V0ZX0="/&gt;
                                    &lt;L7p:VariableToSet stringValue="attemptedroutes"/&gt;
                                &lt;/L7p:SetVariable&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHthdHRlbXB0ZWRyb3V0ZXN9ICR7cm91dGV9"/&gt;
                                &lt;L7p:VariableToSet stringValue="attemptedroutes"/&gt;
                            &lt;/L7p:SetVariable&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;wsp:All wsp:Usage="Required"&gt;
                                &lt;L7p:HttpRoutingAssertion&gt;
                                    &lt;L7p:ConnectionTimeout stringValue="3000"/&gt;
                                    &lt;L7p:HttpMethod httpMethod="GET"/&gt;
                                    &lt;L7p:MaxRetries intValue="100"/&gt;
                                    &lt;L7p:ProtectedServiceUrl stringValue="http://${route}:8080/rest/default/svcOrders/v1/Orders?sysfilter=equal(customerNumber:'${customer}')"/&gt;
                                    &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                                    &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                                    &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                    &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:CustomizeValue stringValue="CALiveAPICreator zFeg53T5ESosM2xqM86s:1"/&gt;
                                    &lt;L7p:Name stringValue="Authorization"/&gt;
                                    &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Rules&gt;
                                    &lt;/L7p:RequestHeaderRules&gt;
                                    &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                                    &lt;/L7p:RequestParamRules&gt;
                                    &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                                    &lt;L7p:item httpPassthroughRule="included"&gt;
                                    &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;/L7p:Rules&gt;
                                    &lt;/L7p:ResponseHeaderRules&gt;
                                    &lt;L7p:ResponseMsgDest stringValue="orders"/&gt;
                                    &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
                                &lt;/L7p:HttpRoutingAssertion&gt;
                                &lt;L7p:CacheStorage&gt;
                                    &lt;L7p:CacheEntryKey stringValue="${customer}-endpoints_${gateway.cluster.hostname}"/&gt;
                                    &lt;L7p:CacheId stringValue="EndPointCache"/&gt;
                                    &lt;L7p:MaxEntries stringValue="100"/&gt;
                                    &lt;L7p:MaxEntryAgeSeconds stringValue="120"/&gt;
                                    &lt;L7p:MaxEntrySizeBytes stringValue="1000000"/&gt;
                                    &lt;L7p:OtherTargetMessageVariable stringValue="orders"/&gt;
                                    &lt;L7p:Target target="OTHER"/&gt;
                                &lt;/L7p:CacheStorage&gt;
                                &lt;L7p:assertionComment&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Route to endpoint successful branch"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:assertionComment&gt;
                            &lt;/wsp:All&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Route failed, mark as down"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Base64Expression stringValue="LTE="/&gt;
                                &lt;L7p:DataType variableDataType="int"/&gt;
                                &lt;L7p:VariableToSet stringValue="feedback.current.status"/&gt;
                            &lt;/L7p:SetVariable&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHthc3NlcnRpb24ubGF0ZW5jeS5tc30="/&gt;
                            &lt;L7p:VariableToSet stringValue="feedback.current.latency"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtodHRwcm91dGluZy5yZWFzb25Db2RlfQ=="/&gt;
                            &lt;L7p:VariableToSet stringValue="feedback.current.reasonCode"/&gt;
                        &lt;/L7p:SetVariable&gt;
                        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${feedback.current.status}"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:Negated booleanValue="true"/&gt;
                                    &lt;L7p:Operator operator="EMPTY"/&gt;
                                    &lt;L7p:RightValue stringValue=""/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item binary="included"&gt;
                                    &lt;L7p:RightValue stringValue="-1"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="dHJ1ZQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="routeList.break"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // If route failed, continue loop and route again, else break to stop routing loop"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:OneOrMore&gt;
                        &lt;L7p:ProcessRoutingStrategyResult/&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="  // Dynamically route to endpoint logic"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/L7p:ForEachLoop&gt;
                &lt;/wsp:All&gt;
            &lt;/wsp:OneOrMore&gt;
        &lt;/wsp:All&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
</l7:ResourceSet>
                            </l7:Resources>
                        </l7:Policy>
                    </l7:Resource>
                </l7:Item>
                <l7:Item>
                    <l7:Name>custom_orderAPI</l7:Name>
                    <l7:Id>625292a693dae5ebdbef12a7aa8e52ce</l7:Id>
                    <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
                    <l7:TimeStamp>2017-08-03T16:13:13.013Z</l7:TimeStamp>
                    <l7:Resource>
                        <l7:EncapsulatedAssertion id="625292a693dae5ebdbef12a7aa8e52ce" version="0">
                            <l7:Name>custom_orderAPI</l7:Name>
                            <l7:Guid>45dd76b4-6807-4817-b30b-e6c47f15c09a</l7:Guid>
                            <l7:PolicyReference id="625292a693dae5ebdbef12a7aa8e52b5" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                            <l7:EncapsulatedArguments>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>1</l7:Ordinal>
    <l7:ArgumentName>attemptedroutes</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>2</l7:Ordinal>
    <l7:ArgumentName>orders</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
<l7:EncapsulatedAssertionArgument>
    <l7:Ordinal>3</l7:Ordinal>
    <l7:ArgumentName>orders.results</l7:ArgumentName>
    <l7:ArgumentType>string</l7:ArgumentType>
    <l7:GuiPrompt>false</l7:GuiPrompt>
</l7:EncapsulatedAssertionArgument>
                            </l7:EncapsulatedArguments>
                            <l7:EncapsulatedResults>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>attemptedroutes</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>cachehit</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>httpRouting.latency</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>httpRouting.url</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>orders</l7:ResultName>
    <l7:ResultType>message</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>routeList.break</l7:ResultName>
    <l7:ResultType>string</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>routeList.current</l7:ResultName>
    <l7:ResultType>other</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>routeList.exceededlimit</l7:ResultName>
    <l7:ResultType>boolean</l7:ResultType>
</l7:EncapsulatedAssertionResult>
<l7:EncapsulatedAssertionResult>
    <l7:ResultName>routeList.iterations</l7:ResultName>
    <l7:ResultType>int</l7:ResultType>
</l7:EncapsulatedAssertionResult>
                            </l7:EncapsulatedResults>
                            <l7:Properties>
<l7:Property key="allowTracing">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="paletteFolder">
    <l7:StringValue>routing</l7:StringValue>
</l7:Property>
<l7:Property key="passMetricsToParent">
    <l7:StringValue>false</l7:StringValue>
</l7:Property>
<l7:Property key="policyGuid">
    <l7:StringValue>96cb5ae4-5cd3-4326-96af-b45bb69741f7</l7:StringValue>
</l7:Property>
                            </l7:Properties>
                        </l7:EncapsulatedAssertion>
                    </l7:Resource>
                </l7:Item>
            </l7:References>
            <l7:Mappings>
                <l7:Mapping action="NewOrExisting" srcId="0000000000000000fffffffffff5519f" srcUri="/1.0/clusterProperties/0000000000000000fffffffffff5519f" type="CLUSTER_PROPERTY">
                    <l7:Properties>
                        <l7:Property key="MapBy">
                            <l7:StringValue>name</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrExisting" srcId="00000000000000000000000000000002:SSL" srcUri="/1.0/privateKeys/00000000000000000000000000000002:SSL" type="SSG_KEY_ENTRY">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrExisting" srcId="d1bf78b539c944534cc5d33d1ff4fc64" srcUri="/1.0/folders/d1bf78b539c944534cc5d33d1ff4fc64" type="FOLDER">
                    <l7:Properties>
                        <l7:Property key="FailOnNew">
                            <l7:BooleanValue>true</l7:BooleanValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:Mapping>
                <l7:Mapping action="NewOrExisting" srcId="625292a693dae5ebdbef12a7aa8e52b5" srcUri="/1.0/policies/625292a693dae5ebdbef12a7aa8e52b5" type="POLICY"/>
                <l7:Mapping action="NewOrExisting" srcId="625292a693dae5ebdbef12a7aa8e52ce" srcUri="/1.0/encapsulatedAssertions/625292a693dae5ebdbef12a7aa8e52ce" type="ENCAPSULATED_ASSERTION"/>
            </l7:Mappings>
        </l7:Bundle>