<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<l7:Bundle xmlns:l7="http://ns.l7tech.com/2010/04/gateway-management">
    <l7:References>
        <l7:Item>
            <l7:Name>Custom Encapsulated Assertion Fragments</l7:Name>
            <l7:Id>d1bf78b539c944534cc5d33d1ff4fc64</l7:Id>
            <l7:Type>FOLDER</l7:Type>
            <l7:TimeStamp>2017-06-19T23:14:23.270Z</l7:TimeStamp>
            <l7:Resource>
                <l7:Folder folderId="2a97ddf9a6e77162832b9c27bc8f57e0" id="d1bf78b539c944534cc5d33d1ff4fc64" version="0">
                    <l7:Name>Custom Encapsulated Assertion Fragments</l7:Name>
                </l7:Folder>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>consul.agentAddr</l7:Name>
            <l7:Id>d1082092bb231dd046946ec61d23f3f5</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2017-06-19T23:14:23.270Z</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="d1082092bb231dd046946ec61d23f3f5" version="4">
                    <l7:Name>consul.agentAddr</l7:Name>
                    <l7:Value>http://172.16.2.1:8500</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>consul.token</l7:Name>
            <l7:Id>d9f952747dceb0e8729e37e8f40f4f15</l7:Id>
            <l7:Type>CLUSTER_PROPERTY</l7:Type>
            <l7:TimeStamp>2017-06-19T23:14:23.270Z</l7:TimeStamp>
            <l7:Resource>
                <l7:ClusterProperty id="d9f952747dceb0e8729e37e8f40f4f15" version="2">
                    <l7:Name>consul.token</l7:Name>
                    <l7:Value>6d063417-e0cf-df13-7657-b79d119c7909</l7:Value>
                </l7:ClusterProperty>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>ConsulLookup</l7:Name>
            <l7:Id>c141e76fe5f09354df66a9a2e7025af3</l7:Id>
            <l7:Type>POLICY</l7:Type>
            <l7:TimeStamp>2017-06-19T23:14:23.292Z</l7:TimeStamp>
            <l7:Resource>
                <l7:Policy guid="942c8370-ea46-430d-a9e8-693529386be1" id="c141e76fe5f09354df66a9a2e7025af3" version="8">
                    <l7:PolicyDetail folderId="d1bf78b539c944534cc5d33d1ff4fc64" guid="942c8370-ea46-430d-a9e8-693529386be1" id="c141e76fe5f09354df66a9a2e7025af3" version="8">
                        <l7:Name>ConsulLookup</l7:Name>
                        <l7:PolicyType>Include</l7:PolicyType>
                        <l7:Properties>
                            <l7:Property key="revision">
                                <l7:LongValue>9</l7:LongValue>
                            </l7:Property>
                            <l7:Property key="soap">
                                <l7:BooleanValue>false</l7:BooleanValue>
                            </l7:Property>
                        </l7:Properties>
                    </l7:PolicyDetail>
                    <l7:Resources>
                        <l7:ResourceSet tag="policy">
                            <l7:Resource type="policy">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy"&gt;
    &lt;wsp:All wsp:Usage="Required"&gt;
        &lt;L7p:CommentAssertion&gt;
            &lt;L7p:Comment stringValue="Policy Fragment: ConsulLookup"/&gt;
        &lt;/L7p:CommentAssertion&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${consul.agentAddr}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item regex="included"&gt;
                        &lt;L7p:Pattern stringValue="https?\:\/\/.+"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${gateway.consul.agentAddr}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item regex="included"&gt;
                            &lt;L7p:Pattern stringValue="https?\:\/\/.+"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:SetVariable&gt;
                    &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LmNvbnN1bC5hZ2VudEFkZHJ9"/&gt;
                    &lt;L7p:VariableToSet stringValue="consul.agentAddr"/&gt;
                &lt;/L7p:SetVariable&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="The Consul agent address does not appear to be valid. Please check that the Consul address is configured on the Gateway instance or the encass, and that it is a valid HTTP(S) address."/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValue="{&amp;quot;error&amp;quot;:&amp;quot;configuration_error&amp;quot;,&amp;quot;message&amp;quot;:&amp;quot;A configuration error has prevented this request from being fulfilled. Please contact your gateway administrator.&amp;quot;}"/&gt;
                    &lt;L7p:ContentType stringValue="application/json; charset=UTF-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                &lt;/L7p:CustomizeErrorResponse&gt;
                &lt;L7p:FalseAssertion/&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                    &lt;L7p:ComparisonAssertion&gt;
                        &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                        &lt;L7p:Expression1 stringValue="${consul.token}"/&gt;
                        &lt;L7p:Operator operatorNull="null"/&gt;
                        &lt;L7p:Predicates predicates="included"&gt;
                            &lt;L7p:item dataType="included"&gt;
                                &lt;L7p:Type variableDataType="string"/&gt;
                            &lt;/L7p:item&gt;
                            &lt;L7p:item stringLength="included"&gt;
                                &lt;L7p:Max intValue="-1"/&gt;
                            &lt;/L7p:item&gt;
                        &lt;/L7p:Predicates&gt;
                    &lt;/L7p:ComparisonAssertion&gt;
                    &lt;wsp:All wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${gateway.consul.token}"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item stringLength="included"&gt;
                                    &lt;L7p:Max intValue="-1"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:SetVariable&gt;
                            &lt;L7p:Base64Expression stringValue="JHtnYXRld2F5LmNvbnN1bC50b2tlbn0="/&gt;
                            &lt;L7p:VariableToSet stringValue="consul.token"/&gt;
                        &lt;/L7p:SetVariable&gt;
                    &lt;/wsp:All&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:Base64Expression stringValue=""/&gt;
                        &lt;L7p:VariableToSet stringValue="consul.token"/&gt;
                    &lt;/L7p:SetVariable&gt;
                &lt;/wsp:OneOrMore&gt;
                &lt;L7p:FalseAssertion/&gt;
            &lt;/wsp:All&gt;
            &lt;L7p:HttpRoutingAssertion&gt;
                &lt;L7p:AssertionComment assertionComment="included"&gt;
                    &lt;L7p:Properties mapValue="included"&gt;
                        &lt;L7p:entry&gt;
                            &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                            &lt;L7p:value stringValue="Retrieve list of nodes from Consul"/&gt;
                        &lt;/L7p:entry&gt;
                    &lt;/L7p:Properties&gt;
                &lt;/L7p:AssertionComment&gt;
                &lt;L7p:HttpMethod httpMethod="GET"/&gt;
                &lt;L7p:ProtectedServiceUrl stringValue="${consul.agentAddr}/v1/catalog/service/${serviceName}"/&gt;
                &lt;L7p:ProxyPassword stringValueNull="null"/&gt;
                &lt;L7p:ProxyUsername stringValueNull="null"/&gt;
                &lt;L7p:RequestHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                        &lt;L7p:item httpPassthroughRule="included"&gt;
                            &lt;L7p:CustomizeValue stringValue="${consul.token}"/&gt;
                            &lt;L7p:Name stringValue="X-Consul-Token"/&gt;
                            &lt;L7p:UsesCustomizedValue booleanValue="true"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                &lt;/L7p:RequestHeaderRules&gt;
                &lt;L7p:RequestParamRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"/&gt;
                &lt;/L7p:RequestParamRules&gt;
                &lt;L7p:ResponseHeaderRules httpPassthroughRuleSet="included"&gt;
                    &lt;L7p:ForwardAll booleanValue="true"/&gt;
                    &lt;L7p:Rules httpPassthroughRules="included"&gt;
                        &lt;L7p:item httpPassthroughRule="included"&gt;
                            &lt;L7p:Name stringValue="Set-Cookie"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Rules&gt;
                &lt;/L7p:ResponseHeaderRules&gt;
                &lt;L7p:ResponseMsgDest stringValue="consul.response"/&gt;
                &lt;L7p:SamlAssertionVersion intValue="2"/&gt;
            &lt;/L7p:HttpRoutingAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="Communication with Consul to discover service instances failed. Please check the Consul agent address."/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValue="{&amp;quot;body&amp;quot;:&amp;quot;service_unavailable',&amp;quot;message&amp;quot;:&amp;quot;No servers are available to handle the request.&amp;quot;}"/&gt;
                    &lt;L7p:ContentType stringValue="application/json; charset=UTF-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                    &lt;L7p:HttpStatus stringValue="503"/&gt;
                &lt;/L7p:CustomizeErrorResponse&gt;
                &lt;L7p:FalseAssertion/&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;L7p:EvaluateJsonPathExpression&gt;
            &lt;L7p:AssertionComment assertionComment="included"&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Extract list of nodes"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:AssertionComment&gt;
            &lt;L7p:Expression stringValue="$"/&gt;
            &lt;L7p:OtherTargetMessageVariable stringValue="consul.response"/&gt;
            &lt;L7p:Target target="OTHER"/&gt;
            &lt;L7p:VariablePrefix stringValue="consul.response.nodes"/&gt;
        &lt;/L7p:EvaluateJsonPathExpression&gt;
        &lt;L7p:ForEachLoop L7p:Usage="Required"
            loopVariable="consul.response.nodes.results" variablePrefix="service_node"&gt;
            &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                &lt;L7p:CommentAssertion&gt;
                    &lt;L7p:Comment stringValue="Ignore nodes from which a usable address cannot be extracted"/&gt;
                &lt;/L7p:CommentAssertion&gt;
                &lt;wsp:All wsp:Usage="Required"&gt;
                    &lt;L7p:SetVariable&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Cast node to message for JSON parsing"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Base64Expression stringValue="JHtzZXJ2aWNlX25vZGUuY3VycmVudH0="/&gt;
                        &lt;L7p:ContentType stringValue="application/json; charset=utf-8"/&gt;
                        &lt;L7p:DataType variableDataType="message"/&gt;
                        &lt;L7p:VariableToSet stringValue="cnode"/&gt;
                    &lt;/L7p:SetVariable&gt;
                    &lt;L7p:EvaluateJsonPathExpression&gt;
                        &lt;L7p:AssertionComment assertionComment="included"&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Extract cnode.service_port"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:AssertionComment&gt;
                        &lt;L7p:Expression stringValue="$.ServicePort"/&gt;
                        &lt;L7p:OtherTargetMessageVariable stringValue="cnode"/&gt;
                        &lt;L7p:Target target="OTHER"/&gt;
                        &lt;L7p:VariablePrefix stringValue="cnode.service_port"/&gt;
                    &lt;/L7p:EvaluateJsonPathExpression&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="Validate port"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;L7p:ComparisonAssertion&gt;
                            &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                            &lt;L7p:Expression1 stringValue="${cnode.service_port.result}"/&gt;
                            &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                            &lt;L7p:Operator operatorNull="null"/&gt;
                            &lt;L7p:Predicates predicates="included"&gt;
                                &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                &lt;/L7p:item&gt;
                                &lt;L7p:item regex="included"&gt;
                                    &lt;L7p:Pattern stringValue="^[0-9]{1,5}$"/&gt;
                                &lt;/L7p:item&gt;
                            &lt;/L7p:Predicates&gt;
                        &lt;/L7p:ComparisonAssertion&gt;
                        &lt;L7p:FalseAssertion&gt;
                            &lt;L7p:AssertionComment assertionComment="included"&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Disregard node if service port doesn't make sense"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:AssertionComment&gt;
                        &lt;/L7p:FalseAssertion&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Validate service port"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:CommentAssertion&gt;
                        &lt;L7p:Comment stringValue="Extract address, preferring ServiceAddress to Address"/&gt;
                    &lt;/L7p:CommentAssertion&gt;
                    &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:EvaluateJsonPathExpression&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Extract cnode.service_addr"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Expression stringValue="$.ServiceAddress"/&gt;
                                &lt;L7p:OtherTargetMessageVariable stringValue="cnode"/&gt;
                                &lt;L7p:Target target="OTHER"/&gt;
                                &lt;L7p:VariablePrefix stringValue="cnode.service_addr"/&gt;
                            &lt;/L7p:EvaluateJsonPathExpression&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${cnode.service_addr.result}"/&gt;
                                &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item stringLength="included"&gt;
                                    &lt;L7p:Max intValue="-1"/&gt;
                                    &lt;L7p:Min intValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtzY2hlbWV9JHtjbm9kZS5zZXJ2aWNlX2FkZHIucmVzdWx0fToke2Nub2RlLnNlcnZpY2VfcG9ydC5yZXN1bHR9JHtwYXRoUHJlZml4fQ=="/&gt;
                                &lt;L7p:VariableToSet stringValue="cnode.usable_addr"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Examine service addr"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;wsp:All wsp:Usage="Required"&gt;
                            &lt;L7p:EvaluateJsonPathExpression&gt;
                                &lt;L7p:AssertionComment assertionComment="included"&gt;
                                    &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Extract cnode.addr"/&gt;
                                    &lt;/L7p:entry&gt;
                                    &lt;/L7p:Properties&gt;
                                &lt;/L7p:AssertionComment&gt;
                                &lt;L7p:Expression stringValue="$.Address"/&gt;
                                &lt;L7p:OtherTargetMessageVariable stringValue="cnode"/&gt;
                                &lt;L7p:Target target="OTHER"/&gt;
                                &lt;L7p:VariablePrefix stringValue="cnode.addr"/&gt;
                            &lt;/L7p:EvaluateJsonPathExpression&gt;
                            &lt;L7p:ComparisonAssertion&gt;
                                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                                &lt;L7p:Expression1 stringValue="${cnode.addr.result}"/&gt;
                                &lt;L7p:MultivaluedComparison multivaluedComparison="FAIL"/&gt;
                                &lt;L7p:Operator operatorNull="null"/&gt;
                                &lt;L7p:Predicates predicates="included"&gt;
                                    &lt;L7p:item dataType="included"&gt;
                                    &lt;L7p:Type variableDataType="string"/&gt;
                                    &lt;/L7p:item&gt;
                                    &lt;L7p:item stringLength="included"&gt;
                                    &lt;L7p:Max intValue="-1"/&gt;
                                    &lt;L7p:Min intValue="1"/&gt;
                                    &lt;/L7p:item&gt;
                                &lt;/L7p:Predicates&gt;
                            &lt;/L7p:ComparisonAssertion&gt;
                            &lt;L7p:SetVariable&gt;
                                &lt;L7p:Base64Expression stringValue="JHtzY2hlbWV9JHtjbm9kZS5hZGRyLnJlc3VsdH06JHtjbm9kZS5zZXJ2aWNlX3BvcnQucmVzdWx0fSR7cGF0aFByZWZpeH0="/&gt;
                                &lt;L7p:VariableToSet stringValue="cnode.usable_addr"/&gt;
                            &lt;/L7p:SetVariable&gt;
                            &lt;L7p:assertionComment&gt;
                                &lt;L7p:Properties mapValue="included"&gt;
                                    &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Examine node addr"/&gt;
                                    &lt;/L7p:entry&gt;
                                &lt;/L7p:Properties&gt;
                            &lt;/L7p:assertionComment&gt;
                        &lt;/wsp:All&gt;
                        &lt;L7p:assertionComment&gt;
                            &lt;L7p:Properties mapValue="included"&gt;
                                &lt;L7p:entry&gt;
                                    &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                    &lt;L7p:value stringValue="Determine which address to use; prefer service addr over node addr"/&gt;
                                &lt;/L7p:entry&gt;
                            &lt;/L7p:Properties&gt;
                        &lt;/L7p:assertionComment&gt;
                    &lt;/wsp:OneOrMore&gt;
                    &lt;L7p:ManipulateMultiValuedVariable&gt;
                        &lt;L7p:SourceVariableName stringValue="cnode.usable_addr"/&gt;
                        &lt;L7p:TargetVariableName stringValue="service.hosts"/&gt;
                    &lt;/L7p:ManipulateMultiValuedVariable&gt;
                    &lt;L7p:assertionComment&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="Attempt to extract usable address"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:assertionComment&gt;
                &lt;/wsp:All&gt;
                &lt;L7p:TrueAssertion&gt;
                    &lt;L7p:AssertionComment assertionComment="included"&gt;
                        &lt;L7p:Properties mapValue="included"&gt;
                            &lt;L7p:entry&gt;
                                &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                                &lt;L7p:value stringValue="If we can't extract a usable address, keep on truckin'"/&gt;
                            &lt;/L7p:entry&gt;
                        &lt;/L7p:Properties&gt;
                    &lt;/L7p:AssertionComment&gt;
                &lt;/L7p:TrueAssertion&gt;
            &lt;/wsp:OneOrMore&gt;
            &lt;L7p:assertionComment&gt;
                &lt;L7p:Properties mapValue="included"&gt;
                    &lt;L7p:entry&gt;
                        &lt;L7p:key stringValue="RIGHT.COMMENT"/&gt;
                        &lt;L7p:value stringValue="Extract usable node addresses"/&gt;
                    &lt;/L7p:entry&gt;
                &lt;/L7p:Properties&gt;
            &lt;/L7p:assertionComment&gt;
        &lt;/L7p:ForEachLoop&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;L7p:CommentAssertion&gt;
                &lt;L7p:Comment stringValue="Check that we got at least one service node"/&gt;
            &lt;/L7p:CommentAssertion&gt;
            &lt;L7p:ComparisonAssertion&gt;
                &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                &lt;L7p:Expression1 stringValue="${service.hosts}"/&gt;
                &lt;L7p:Operator operatorNull="null"/&gt;
                &lt;L7p:Predicates predicates="included"&gt;
                    &lt;L7p:item dataType="included"&gt;
                        &lt;L7p:Type variableDataType="string"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item cardinality="included"&gt;
                        &lt;L7p:Max intValue="-1"/&gt;
                        &lt;L7p:Min intValue="1"/&gt;
                    &lt;/L7p:item&gt;
                    &lt;L7p:item stringLength="included"&gt;
                        &lt;L7p:Max intValue="-1"/&gt;
                        &lt;L7p:Min intValue="1"/&gt;
                    &lt;/L7p:item&gt;
                &lt;/L7p:Predicates&gt;
            &lt;/L7p:ComparisonAssertion&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="Node lookup was successful, but Consul returned an empty list of nodes. Returning 503 Service Unavailable."/&gt;
                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValue="{&amp;quot;error&amp;quot;:&amp;quot;service_unavailable&amp;quot;,&amp;quot;error_message&amp;quot;:&amp;quot;No servers are available to handle the request&amp;quot;}"/&gt;
                    &lt;L7p:ContentType stringValue="application/json; charset=utf-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                    &lt;L7p:HttpStatus stringValue="503"/&gt;
                &lt;/L7p:CustomizeErrorResponse&gt;
                &lt;L7p:FalseAssertion/&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
        &lt;wsp:OneOrMore wsp:Usage="Required"&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:ComparisonAssertion&gt;
                    &lt;L7p:CaseSensitive booleanValue="false"/&gt;
                    &lt;L7p:Expression1 stringValue="${routingStrategy}"/&gt;
                    &lt;L7p:Operator operatorNull="null"/&gt;
                    &lt;L7p:Predicates predicates="included"&gt;
                        &lt;L7p:item dataType="included"&gt;
                            &lt;L7p:Type variableDataType="string"/&gt;
                        &lt;/L7p:item&gt;
                        &lt;L7p:item binary="included"&gt;
                            &lt;L7p:RightValue stringValue="roundRobin"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Predicates&gt;
                &lt;/L7p:ComparisonAssertion&gt;
                &lt;L7p:CreateRoutingStrategy&gt;
                    &lt;L7p:Routes routes="included"&gt;
                        &lt;L7p:item route="included"&gt;
                            &lt;L7p:Name stringValue="${service.hosts}"/&gt;
                        &lt;/L7p:item&gt;
                    &lt;/L7p:Routes&gt;
                    &lt;L7p:StrategyDescription stringValue="Round-Robin"/&gt;
                    &lt;L7p:StrategyName stringValue="robin"/&gt;
                &lt;/L7p:CreateRoutingStrategy&gt;
                &lt;L7p:ExecuteRoutingStrategy&gt;
                    &lt;L7p:Route stringValue="service.baseUrl"/&gt;
                &lt;/L7p:ExecuteRoutingStrategy&gt;
            &lt;/wsp:All&gt;
            &lt;wsp:All wsp:Usage="Required"&gt;
                &lt;L7p:AuditDetailAssertion&gt;
                    &lt;L7p:Detail stringValue="The routing strategy configured on the ConsulLookup encass is invalid."/&gt;
                    &lt;L7p:Level stringValue="WARNING"/&gt;
                    &lt;L7p:LoggingOnly booleanValue="true"/&gt;
                &lt;/L7p:AuditDetailAssertion&gt;
                &lt;L7p:CustomizeErrorResponse&gt;
                    &lt;L7p:Content stringValue="{&amp;quot;error&amp;quot;:&amp;quot;configuration_error&amp;quot;,&amp;quot;message&amp;quot;:&amp;quot;A configuration error has prevented this request from being fulfilled. Please contact your gateway administrator.&amp;quot;}"/&gt;
                    &lt;L7p:ContentType stringValue="application/json;charset=utf-8"/&gt;
                    &lt;L7p:ExtraHeaders nameValuePairArray="included"/&gt;
                    &lt;L7p:HttpStatus stringValue="503"/&gt;
                &lt;/L7p:CustomizeErrorResponse&gt;
                &lt;L7p:FalseAssertion/&gt;
            &lt;/wsp:All&gt;
        &lt;/wsp:OneOrMore&gt;
    &lt;/wsp:All&gt;
&lt;/wsp:Policy&gt;
</l7:Resource>
                        </l7:ResourceSet>
                    </l7:Resources>
                </l7:Policy>
            </l7:Resource>
        </l7:Item>
        <l7:Item>
            <l7:Name>ConsulLookup</l7:Name>
            <l7:Id>c141e76fe5f09354df66a9a2e7025b09</l7:Id>
            <l7:Type>ENCAPSULATED_ASSERTION</l7:Type>
            <l7:TimeStamp>2017-06-19T23:14:23.292Z</l7:TimeStamp>
            <l7:Resource>
                <l7:EncapsulatedAssertion id="c141e76fe5f09354df66a9a2e7025b09" version="0">
                    <l7:Name>ConsulLookup</l7:Name>
                    <l7:Guid>b65608e2-668b-405f-b6e9-b6518e8c109e</l7:Guid>
                    <l7:PolicyReference id="c141e76fe5f09354df66a9a2e7025af3" resourceUri="http://ns.l7tech.com/2010/04/gateway-management/policies"/>
                    <l7:EncapsulatedArguments>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>1</l7:Ordinal>
                            <l7:ArgumentName>consul.agentAddr</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Consul Agent Address</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>2</l7:Ordinal>
                            <l7:ArgumentName>pathPrefix</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Service URL Path Prefix</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>3</l7:Ordinal>
                            <l7:ArgumentName>routingStrategy</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Routing Strategy</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>4</l7:Ordinal>
                            <l7:ArgumentName>scheme</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Service URL Scheme</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>5</l7:Ordinal>
                            <l7:ArgumentName>serviceName</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Service Name in Consul</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                        <l7:EncapsulatedAssertionArgument>
                            <l7:Ordinal>6</l7:Ordinal>
                            <l7:ArgumentName>consul.token</l7:ArgumentName>
                            <l7:ArgumentType>string</l7:ArgumentType>
                            <l7:GuiLabel>Consul ACL Token</l7:GuiLabel>
                            <l7:GuiPrompt>true</l7:GuiPrompt>
                        </l7:EncapsulatedAssertionArgument>
                    </l7:EncapsulatedArguments>
                    <l7:EncapsulatedResults>
                        <l7:EncapsulatedAssertionResult>
                            <l7:ResultName>service.baseUrl</l7:ResultName>
                            <l7:ResultType>string</l7:ResultType>
                        </l7:EncapsulatedAssertionResult>
                    </l7:EncapsulatedResults>
                    <l7:Properties>
                        <l7:Property key="allowTracing">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="paletteFolder">
                            <l7:StringValue>internalAssertions</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="passMetricsToParent">
                            <l7:StringValue>false</l7:StringValue>
                        </l7:Property>
                        <l7:Property key="policyGuid">
                            <l7:StringValue>942c8370-ea46-430d-a9e8-693529386be1</l7:StringValue>
                        </l7:Property>
                    </l7:Properties>
                </l7:EncapsulatedAssertion>
            </l7:Resource>
        </l7:Item>
    </l7:References>
    <l7:Mappings>
        <l7:Mapping action="NewOrExisting" srcId="2a97ddf9a6e77162832b9c27bc8f57e0" srcUri="https://065b330d5c55:8443/restman/1.0/folders/2a97ddf9a6e77162832b9c27bc8f57e0" type="FOLDER">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="d1bf78b539c944534cc5d33d1ff4fc64" srcUri="https://065b330d5c55:8443/restman/1.0/folders/d1bf78b539c944534cc5d33d1ff4fc64" type="FOLDER"/>
        <l7:Mapping action="NewOrExisting" srcId="d1082092bb231dd046946ec61d23f3f5" srcUri="https://065b330d5c55:8443/restman/1.0/clusterProperties/d1082092bb231dd046946ec61d23f3f5" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="d9f952747dceb0e8729e37e8f40f4f15" srcUri="https://065b330d5c55:8443/restman/1.0/clusterProperties/d9f952747dceb0e8729e37e8f40f4f15" type="CLUSTER_PROPERTY">
            <l7:Properties>
                <l7:Property key="MapBy">
                    <l7:StringValue>name</l7:StringValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="00000000000000000000000000000002:SSL" srcUri="https://065b330d5c55:8443/restman/1.0/privateKeys/00000000000000000000000000000002:SSL" type="SSG_KEY_ENTRY">
            <l7:Properties>
                <l7:Property key="FailOnNew">
                    <l7:BooleanValue>true</l7:BooleanValue>
                </l7:Property>
            </l7:Properties>
        </l7:Mapping>
        <l7:Mapping action="NewOrExisting" srcId="c141e76fe5f09354df66a9a2e7025af3" srcUri="https://065b330d5c55:8443/restman/1.0/policies/c141e76fe5f09354df66a9a2e7025af3" type="POLICY"/>
        <l7:Mapping action="NewOrExisting" srcId="c141e76fe5f09354df66a9a2e7025b09" srcUri="https://065b330d5c55:8443/restman/1.0/encapsulatedAssertions/c141e76fe5f09354df66a9a2e7025b09" type="ENCAPSULATED_ASSERTION"/>
    </l7:Mappings>
</l7:Bundle>
